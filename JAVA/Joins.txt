joins

/**********************************************************************************************************/

A JOIN in SQL is used to combine data from two or more tables based on a related column.

        Let‚Äôs consider two tables:


        üìå Table 1: EMPLOYEES
      --------------------------------
        emp_id	emp_name	dept_id
      --------------------------------
            1	Alice	    101
            2	Bob	        102
            3	Charlie	    103
            4	David	    NULL
      --------------------------------


        üìå Table 2: DEPARTMENTS
      --------------------------------
            dept_id	    dept_name
      --------------------------------
            101	        HR
            102	        IT
            104	        Finance
      --------------------------------

/**********************************************************************************************************/

üìå 1Ô∏è‚É£Ô∏è INNER JOIN (Matching Records Only)
    üîπ Returns only matching records from both tables.

        SELECT e.emp_id, e.emp_name, d.dept_name
        FROM EMPLOYEES e
        INNER JOIN DEPARTMENTS d ON e.dept_id = d.dept_id;

    ‚úÖ Result:

    --------------------------------
    emp_id	emp_name	dept_name
    --------------------------------
        1	Alice	    HR
        2	Bob	        IT
    --------------------------------


    üîπ Explanation:
        ‚Ä¢ Charlie (dept_id 103) and David (NULL dept_id) are excluded since they have no matching department.
        ‚Ä¢ Finance (dept_id 104) is also excluded because no employee belongs to it.

/**********************************************************************************************************/

üìå 2Ô∏è‚É£Ô∏è LEFT JOIN (All from Left, Matching from Right)
    üîπ Returns all employees and the matching department (if any).

        SELECT e.emp_id, e.emp_name, d.dept_name
        FROM EMPLOYEES e
        LEFT JOIN DEPARTMENTS d ON e.dept_id = d.dept_id;

    ‚úÖ Result:

   --------------------------------
    emp_id	emp_name	dept_name
   --------------------------------
        1	Alice	    HR
        2	Bob	        IT
        3	Charlie	    NULL
        4	David	    NULL
   --------------------------------


üîπ Explanation:
	‚Ä¢ All employees are included.
	‚Ä¢ If an employee has no matching department, NULL is returned for dept_name.

/**********************************************************************************************************/

üìå 3Ô∏è‚É£Ô∏èRIGHT JOIN (All from Right, Matching from Left)
    üîπ Returns all departments, and the matching employees (if any).

        SELECT e.emp_id, e.emp_name, d.dept_name
        FROM EMPLOYEES e
        RIGHT JOIN DEPARTMENTS d ON e.dept_id = d.dept_id;


    ‚úÖ Result:

   ------------------------------------
    emp_id	    emp_name	dept_name
   ------------------------------------
        1	    Alice	    HR
        2	    Bob	        IT
        NULL	NULL	    Finance
   ------------------------------------

üîπ Explanation:
	‚Ä¢ All departments are included.
	‚Ä¢ If a department has no employees, NULL is returned for emp_id and emp_name.

/**********************************************************************************************************/

üìå 4Ô∏è‚É£Ô∏èFULL OUTER JOIN (All from Both Sides)
    üîπ Returns all employees and all departments, where there‚Äôs no match NULL is returned.

        SELECT e.emp_id, e.emp_name, d.dept_name
        FROM EMPLOYEES e
        FULL OUTER JOIN DEPARTMENTS d ON e.dept_id = d.dept_id;


    ‚úÖ Result:

   ------------------------------------
    emp_id	    emp_name	dept_name
   ------------------------------------
        1	    Alice	    HR
        2	    Bob	        IT
        3	    Charlie	    NULL
        4	    David	    NULL
        NULL	NULL	    Finance
   ------------------------------------

üîπ Explanation:
	‚Ä¢ All employees and all departments are included.
	‚Ä¢ Charlie & David have NULL dept_name (no department).
	‚Ä¢ Finance has NULL emp_id and emp_name (no employees).

/**********************************************************************************************************/

üìå 5Ô∏è‚É£ CROSS JOIN (Cartesian Product)
    üîπ Combines every row from EMPLOYEES with every row from DEPARTMENTS.

        SELECT e.emp_id, e.emp_name, d.dept_name
        FROM EMPLOYEES e
        CROSS JOIN DEPARTMENTS d;


    ‚úÖ Result: (4 employees √ó 3 departments = 12 rows)

  ------------------------------------
    emp_id	emp_name	dept_name
  ------------------------------------
        1	Alice	    HR
        1	Alice	    IT
        1	Alice	    Finance
        2	Bob	        HR
        2	Bob	        IT
        2	Bob	        Finance
        3	Charlie	    HR
        3	Charlie	    IT
        3	Charlie	    Finance
        4	David	    HR
        4	David	    IT
        4	David	    Finance
  ------------------------------------


    üîπ Explanation:
        ‚Ä¢ Every employee is combined with every department.
        ‚Ä¢ No join condition is used.

/**********************************************************************************************************/

üìå 6Ô∏è‚É£Ô∏èSELF JOIN (Joining a Table to Itself)
    üîπ Find employees who work in the same department as another employee.

        SELECT e1.emp_name AS Employee, e2.emp_name AS Colleague, e1.dept_id
        FROM EMPLOYEES e1
        JOIN EMPLOYEES e2 ON e1.dept_id = e2.dept_id
        WHERE e1.emp_id <> e2.emp_id;

    ‚úÖ Result:

   ------------------------------------
    Employee	Colleague	dept_id
   ------------------------------------

    Alice	    Bob	        101
    Bob	        Alice	    101
   ------------------------------------


    üîπ Explanation:
        ‚Ä¢ The table is joined to itself to compare employees in the same department.

            The WHERE e1.emp_id <> e2.emp_id ensures an employee is not matched to themselves.
/**********************************************************************************************************/